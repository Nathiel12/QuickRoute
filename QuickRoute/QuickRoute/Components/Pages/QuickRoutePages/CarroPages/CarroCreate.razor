@*Nathiel Taveras*@
@page "/Carros/Create"
@attribute [Authorize]
@inject CarrosService carroService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

@*HTML*@
<PageTitle>Create</PageTitle>
<EditForm Model="Carro" OnValidSubmit="Guardar">
	<DataAnnotationsValidator />

	@* Label para notificaciones *@
	<label style="color:red;" hidden="@string.IsNullOrEmpty(errorMensaje)">@errorMensaje</label>

	<div class="container">
		<div class="card shadow-lg">
			<div class="card-header text-center">
				<h5 class="card-title">Registro de Carros</h5>
			</div>

			<div class="card-body">

				@* CarroId *@
				<div class="mb-3">
					<label class="form-label"><strong>CarroId</strong></label>
					<InputNumber class="form-control" @bind-Value="Carro.CarroId" readonly></InputNumber>
				</div>

				<div class="mb-3">
					<label class="form-label"><strong>Fecha</strong></label>
					<InputDate class="form-control" @bind-Value="Carro.FechaRegistro"></InputDate>
				</div>

				@* Prioridad *@
				<div class="mb-3">

					<div class="mb-3">
						<label class="form-label"><strong>Marca</strong></label>
						<InputText class="form-control" @bind-Value="Carro.Marca"></InputText>
						<ValidationMessage For="(() => Carro.Marca)" />
					</div>
				</div>

				@* Modelo *@
				<div class="mb-3">
					<label class="form-label"><strong>Modelo</strong></label>
					<InputText class="form-control" @bind-Value="Carro.Modelo"></InputText>
					<ValidationMessage For="(() => Carro.Modelo)" />
				</div>

				@* Fecha Fabricacion *@
				<div class="mb-3">
					<label class="form-label"><strong>Fecha de Fabricacion</strong></label>
					<InputDate class="form-control" @bind-Value="Carro.FechaFabricacion"></InputDate>
					<ValidationMessage For="(() => Carro.FechaFabricacion)" />
				</div>

				@* Color *@
				<div class="mb-3">
					<label class="form-label"><strong>Color</strong></label>
					<InputText class="form-control" @bind-Value="Carro.Color"></InputText>
					<ValidationMessage For="(() => Carro.Color)" />
				</div>

				@* Precio *@
				<div class="mb-3">
					<label class="form-label"><strong>Precio</strong></label>
					<InputNumber class="form-control" @bind-Value="Carro.Precio"></InputNumber>
					<ValidationMessage For="(() => Carro.Precio)" />

				</div>

				@* Numero de Chasis *@
				<div class="mb-3">
					<label class="form-label"><strong>Numero de Chasis</strong></label>
					<InputText class="form-control" @bind-Value="Carro.NumeroChasis"></InputText>
					<ValidationMessage For="(() => Carro.NumeroChasis)" />
				</div>

			</div>


			@* Footer *@
			<div class="card-footer text-center mt-2">
				<a href="/Carros/Index" class="btn btn-outline-danger"><span class="bi bi-arrow-left"></span>Volver</a>
				<button type="submit" class="btn btn-outline-success bi bi-floppy">Guardar</button>
				<button type="reset" class="btn btn-outline-primary bi bi-plus" @onclick="Nuevo">Nuevo</button>
			</div>
		</div>
	</div>
</EditForm>


@code {
	public Carros Carro { get; set; } = new Carros();
	public string errorMensaje { get; set; } = string.Empty;

	public async Task Guardar()
	{
		errorMensaje = string.Empty;
		var Existe = await carroService.ExisteChasis(Carro.NumeroChasis);
		if(Existe){
			errorMensaje = "Ya existe este Numero de Chasis en el Registro";
		}else{
			var guardo = await carroService.Guardar(Carro);
			if (guardo != null)
			{
				navigationManager.NavigateTo("/Carros/Index");
			}
			else
			{
				errorMensaje = "Error al guardar el Registro";
			}
		}
		
	}

	private void Nuevo(){
		this.Carro = new Carros();
	}
}
