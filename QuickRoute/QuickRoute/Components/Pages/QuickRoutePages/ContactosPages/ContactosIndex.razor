@*Nathiel Taveras*@
@page "/Contactos/Index"
@inject ContactosService contactosService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

@* HTML *@
<PageTitle>Registro de Contactos</PageTitle>

<div class="container">
    <div class="card shadow-lg">
        <div class="card-header space-between">
            <h5 class="card-title">Registro de Contactos</h5>
            <a href="/Contactos/Create" class="btn btn-primary"> <span class="bi bi-plus-square mt-3"></span> Crear</a>
        </div>

        <div class="card-body">

            @*labels*@
            <div class="row">

                @*Filtrar por*@
                <div class="col-3">
                    <label class="col-form-label"><strong>Filtrar por</strong></label>
                </div>

                @*ValorFiltro*@
                <div class="col-4">
                    <label class="col-form-label"><strong>Busqueda</strong></label>
                </div>
            </div>

            @*Inputs y botones*@
            <div class="row align-items-center">
                @*filtro*@
                <div class="col-3">
                    <InputSelect class="form-select" @bind-Value="Filtro">
                        <option value="" selected disabled>Elija una opcion</option>
                        <option value="ContactoId">CarroId</option>
                        <option value="Nombre">Nombre</option>
                    </InputSelect>
                </div>

                @*Busqueda*@
                <div class="col-4">
                    <div class="input-group">
                        <input class="form-control" @bind="ValorFiltro" placeholder="Buscar" />
                        <button type="button" class="btn btn-outline-primary bi bi-search" @onclick="Buscar"></button>
                    </div>
                </div>

                @*Restablecer*@
                <div class="col-3">
                    <button type="button" class="btn btn-outline-secondary bi bi-arrow-counterclockwise"
                            @onclick="Restablecer">
                    </button>
                </div>

            </div>

        </div>
        
            @* Tabla *@
            <table class="table table-hover">
                <thead class="table  table-striped text-black">
                    <tr>
                        <th>ContactoId</th>
                        <th>Nombre</th>
                        <th>Telefono</th>
                        <th>Email</th>
                        <th>Editar</th>
                        <th>Eliminar</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var contacto in ListaContactos)
                    {
                        <tr>
                            <td> @contacto.ContactoId</td>
                            <td> @contacto.Nombre</td>
                            <td> @contacto.Telefono</td>
                            <td> @contacto.Email</td>

                            <td>
                                <a href="/Contactos/Edit/@contacto.ContactoId" class="btn btn-outline-primary bi bi-pencil-square"></a>
                            </td>
                            <td>
                                <a href="/Contactos/Delete/@contacto.ContactoId" class="btn btn-outline-danger bi bi-trash"></a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
    </div>
</div>

@code {

    public List<Contactos> ListaContactos { get; set; } = new List<Contactos>();

    public string Filtro { get; set; } = string.Empty;
    public string ValorFiltro { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        ListaContactos = await contactosService.Listar(c => c.ContactoId > 0);
    }

    private async Task Buscar()
    {
        if (Filtro == "ContactoId")
        {
            if (int.TryParse(ValorFiltro, out var contactoId))
            {
                ListaContactos = await contactosService
                    .Listar(c => c.ContactoId == contactoId);
            }

        }
        else if (ValorFiltro.Trim() != "" && Filtro == "Nombre")
        {
            ListaContactos = await contactosService
                .Listar(c => c.Nombre.ToLower().Contains(ValorFiltro.ToLower()));
        }

        StateHasChanged();

    }
    private async Task Restablecer()
    {
        ListaContactos = await contactosService.Listar(c => c.ContactoId > 0);
        Filtro = string.Empty;
        ValorFiltro = string.Empty;
    }
}