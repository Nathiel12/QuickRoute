@page "/Despachos/Edit/{SolicitudId:int}"
@inject DespachosService despachoService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

@*HTML*@
<PageTitle>Create</PageTitle>
<EditForm Model="Despacho" OnValidSubmit="Guardar">
	<DataAnnotationsValidator />

	@* Label para notificaciones *@
	<label style="color:red;" hidden="@string.IsNullOrEmpty(errorMensaje)">@errorMensaje</label>

	<div class="container">
		<div class="card shadow-lg">
			<div class="card-header text-center">
				<h5 class="card-title">Registro de Despachos</h5>
			</div>

			<div class="card-body">

				@* TecnicoId *@
				<div class="mb-3">
					<label class="form-label"><strong>SolicitudId</strong></label>
					<InputNumber class="form-control" @bind-Value="Despacho.SolicitudId" readonly></InputNumber>
				</div>

				@* Nombre *@
				<div class="mb-3">
					<label class="form-label"><strong>Fecha de Solicitud</strong></label>
					<InputDate class="form-control" @bind-Value="Despacho.FechaSolicitud"></InputDate>
					<ValidationMessage For="(() => Despacho.FechaSolicitud)" />
				</div>

				@* Telefono *@
				<div class="mb-3">
					<label class="form-label"><strong>Localizacion</strong></label>
					<InputText class="form-control" @bind-Value="Despacho.Localizacion"></InputText>
					<ValidationMessage For="(() => Despacho.Localizacion)" />
				</div>
				@* Email *@
				<div class="mb-3">
					<label class="form-label"><strong>Nombre de la Empresa</strong></label>
					<InputText class="form-control" @bind-Value="Despacho.NombreEmpresa" placeholder="Virgilito Motors" readonly></InputText>
					<ValidationMessage For="(() => Despacho.NombreEmpresa)" />
				</div>

				<div class="mb-3">
					<label class="form-label"><strong>Titulo</strong></label>
					<InputText class="form-control" @bind-Value="Despacho.Titulo"></InputText>
					<ValidationMessage For="(() => Despacho.Titulo)" />
				</div>

			</div>

			@* Footer *@
			<div class="card-footer text-center mt-2">
				<a href="/Despacho/Index" class="btn btn-outline-danger"><span class="bi bi-arrow-left"></span>Volver</a>
				<button type="submit" class="btn btn-outline-success bi bi-floppy">Modificar</button>
			</div>
		</div>
	</div>
</EditForm>

@code {
	[Parameter]
	public int SolicitudId { get; set; }

	private Despachos Despacho { get; set; } = new Despachos();
	private string errorMensaje { get; set; } = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		Despacho = await despachoService.Buscar(SolicitudId);
	}

	public async Task Guardar()
	{
		errorMensaje = string.Empty;


		var guardo = await despachoService.Guardar(this.Despacho);
		if (guardo != null)
		{
			navigationManager.NavigateTo("/Despacho/Index");
		}
		else
		{
			errorMensaje = "Error al guardar el Registro";
		}

	}
}
