@page "/Despachos/Create"
@inject DespachosService despachoService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

@*HTML*@
<PageTitle>Create</PageTitle>
<EditForm Model="Despacho" OnValidSubmit="Guardar">
	<DataAnnotationsValidator />

	@* Label para notificaciones *@
	<label style="color:red;" hidden="@string.IsNullOrEmpty(errorMensaje)">@errorMensaje</label>

	<div class="container">
		<div class="card shadow-lg">
			<div class="card-header text-center">
				<h5 class="card-title">Registro de Despachos</h5>
			</div>

			<div class="card-body">

				@* TecnicoId *@
				<div class="mb-3">
					<label class="form-label"><strong>SolicitudId</strong></label>
					<InputNumber class="form-control" @bind-Value="Despacho.SolicitudId" readonly></InputNumber>
				</div>

				@* Nombre *@
				<div class="mb-3">
					<label class="form-label"><strong>Fecha de Solicitud</strong></label>
					<InputDate class="form-control" @bind-Value="Despacho.FechaSolicitud"></InputDate>
					<ValidationMessage For="(() => Despacho.FechaSolicitud)" />
				</div>

				@* Telefono *@
				<div class="mb-3">
					<label class="form-label"><strong>Localizacion</strong></label>
					<InputText class="form-control" @bind-Value="Despacho.Localizacion"></InputText>
					<ValidationMessage For="(() => Despacho.Localizacion)" />
				</div>
				@* Email *@
				<div class="mb-3">
					<label class="form-label"><strong>Nombre de la Empresa</strong></label>
					<InputText class="form-control" @bind-Value="Despacho.NombreEmpresa" placeholder="Virgilito Motors" readonly></InputText>
					<ValidationMessage For="(() => Despacho.NombreEmpresa)" />
				</div>

				<div class="mb-3">
					<label class="form-label"><strong>Titulo</strong></label>
					<InputText class="form-control" @bind-Value="Despacho.Titulo"></InputText>
					<ValidationMessage For="(() => Despacho.Titulo)" />
				</div>

				<div class="border border-success p-3 mt-3">
					<h5>Impuestos</h5>
					<ImpuestoPicker OnImpuestoAgregado="HandleImpuestoAgregado" ImpuestoId="Impuesto.ImpuestoId" ListaImpuestos="ListaImpuestos" Despacho="Despacho" />
					<hr />
					<table class="table table-light">
						<thead class="table table-striped">
							<tr class="Text-center">
								<th>Impuesto</th>
								<th>Monto</th>
								<th>Remover</th>
							</tr>
						</thead>
						<tbody>
							@foreach (var detalle in Despacho.Impuestos)
							{
								<tr>
									<td>@detalle.Nombre</td>
									<td>@detalle.Monto</td>
									<td>
										<button type="button" class="btn btn-outline-danger bi bi-trash"
												@onclick="() => RemoverDetalle(detalle)"></button>
									</td>
								</tr>
							}
						</tbody>
					</table>
					<hr />
				</div>

			</div>

			@* Footer *@
			<div class="card-footer text-center mt-2">
				<a href="/Despacho/Index" class="btn btn-outline-danger"><span class="bi bi-arrow-left"></span>Volver</a>
				<button type="submit" class="btn btn-outline-success bi bi-floppy">Guardar</button>
				<button type="reset" class="btn btn-outline-primary bi bi-plus" @onclick="Nuevo">Nuevo</button>
			</div>
		</div>
	</div>
</EditForm>

@code {
	private Despachos Despacho { get; set; } = new Despachos();
	private Impuestos Impuesto { get; set; } = new Impuestos();
	private List<Impuestos> ListaImpuestos { get; set; } = new List<Impuestos>();
	private string errorMensaje { get; set; } = string.Empty;

	public void Nuevo()
	{
		this.Despacho = new Despachos();
	}

	public async Task Guardar()
	{
		errorMensaje = string.Empty;

		
		var guardo = await despachoService.Guardar(this.Despacho);
		if (guardo != null)
		{
			navigationManager.NavigateTo("/Despacho/Index");
		}
		else
		{
			errorMensaje = "Error al guardar el Registro";
		}

	}

	private void HandleImpuestoAgregado((string Nombre, double MontoBase, double Valor) impuesto)
	{
		// Agregamos el impuesto al objeto Despacho
		if (Despacho.Impuestos == null)
		{
			Despacho.Impuestos = new List<Impuestos>();
		}

		Despacho.Impuestos.Add(new Impuestos
			{
				Nombre = impuesto.Nombre,
				Monto = impuesto.MontoBase,
				Valor = impuesto.Valor
			});
	}
	public void RemoverDetalle(Impuestos detalle)
	{
		Despacho.Impuestos.Remove(detalle);
	}
}
