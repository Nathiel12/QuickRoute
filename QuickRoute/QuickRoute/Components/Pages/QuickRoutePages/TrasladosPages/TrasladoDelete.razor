@page "/Traslados/Delete/{TrasladoId:int}"
@inject TrasladosService trasladosService
@attribute [Authorize]
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Eliminar Traslado</PageTitle>
<EditForm Model="Traslado" OnValidSubmit="Eliminar">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center bg-primary text-white m-2">
                <h4 class="card-title"><strong>Eliminar Traslado</strong></h4>
            </div>

            <div class="card-body">
                <div class="card-header bg-light">
                    <h6 class="text-danger fs-4">¿Estás seguro de que quieres eliminar este traslado?</h6>
                </div>
                <div class="card shadow-lg my-3 col-md-6">
                    <h4 class="bg-light card-header fw-bold text-center">Datos del Traslado</h4>
                    <ul class="px-3 pt-4 pb-5 list-unstyled">
                        <li><strong>TrasladoId: </strong>@Traslado.TrasladoId</li>
                        <li><strong>Monto Total: </strong>@Traslado.TrasladosDetalles.Sum(d => d.Monto).ToString("N2")</li>
                        <li>
                            <strong>Carros:</strong>
                            <ul>
                                @foreach (var detalle in Traslado.TrasladosDetalles)
                                {
                                    <li>@(detalle.Carro?.Marca ?? "N/A") - @detalle.Monto.ToString("N2")</li>
                                }
                            </ul>
                        </li>
                    </ul>
                </div>
            </div>

            <div class="card-footer mt-2">
                <button type="submit" class="btn btn-outline-danger bi bi-trash-fill"> Eliminar </button>
                <a href="/Traslados/Index" class="btn btn-outline-primary"> <span class="bi bi-box-arrow-left"></span> Volver</a>
            </div>
        </div>
    </div>

    <label class="text-success" hidden="@string.IsNullOrEmpty(Saved)">@Saved</label>
    <label class="text-danger" hidden="@string.IsNullOrEmpty(Error)">@Error</label>
</EditForm>

@code {
    [Parameter]
    public int TrasladoId { get; set; }

    private string Error { get; set; } = string.Empty;
    private string Saved { get; set; } = string.Empty;
    public Traslados Traslado { get; set; } = new Traslados();

    protected override async Task OnInitializedAsync()
    {
        Traslado = await trasladosService.Buscar(TrasladoId) ?? new Traslados();
    }

    public async Task Eliminar()
    {
        Error = string.Empty;
        Saved = string.Empty;

        var eliminado = await trasladosService.Eliminar(Traslado.TrasladoId);
        if (eliminado)
        {
            Saved = "Traslado Eliminado Exitosamente";
            navigationManager.NavigateTo("/Traslados/Index");
        }
        else
        {
            Error = "Error al eliminar el Traslado";
        }
    }
}