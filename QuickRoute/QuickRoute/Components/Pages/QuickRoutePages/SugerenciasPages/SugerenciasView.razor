@page "/Sugerencias/View/{SugerenciaId:int}"
@inject SugerenciasService sugerenciaService
@attribute [Authorize]
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider AuthProvider
@rendermode InteractiveServer

<PageTitle>Detalles de Sugerencia</PageTitle>

@* Notificaciones *@
@if (!string.IsNullOrEmpty(ErrorMensaje))
{
    <div class="alert alert-danger">@ErrorMensaje</div>
}

<div class="container">
    <div class="card shadow-lg">
        <div class="card-header text-center bg-primary text-white">
            <h5 class="card-title">Detalles de la Sugerencia</h5>
        </div>

        @if (Sugerencia != null)
        {
            <div class="card-body">
                <div class="row mb-4">
                    <div class="col-md-6">
                        <p><strong>Fecha:</strong> @Sugerencia.Fecha.ToString("dd/MM/yyyy")</p>
                        <p><strong>Email:</strong> @(Sugerencia?.Usuario?.Email ?? UserEmail ?? "No disponible")</p>
                    </div>
                    <div class="col-md-6">
                        <p><strong>Asunto:</strong> @(Sugerencia.Asunto)</p>
                        <p><strong>Satisfaccion:</strong>@(Sugerencia.satisfaccion)</p>
                    </div>
                </div>

                <div class="mt-4 p-3 bg-light rounded">
                    <h6 class="mb-3"><strong>Descripción:</strong></h6>
                    <p class="mb-0 text-muted">@Sugerencia.Descripcion</p>
                </div>

                <div class="card-footer text-center mt-4">
                    <a href="/Sugerencias/Index" class="btn btn-outline-primary">
                        <span class="bi bi-arrow-left"></span> Volver a Sugerencias
                    </a>
                </div>
            </div>
        }
        else
        {
            <div class="card-body">
                <p class="text-danger">Sugerencia no encontrada</p>
                <div class="card-footer text-center mt-2">
                    <a href="/Sugerencia/Index" class="btn btn-outline-secondary">
                        <span class="bi bi-arrow-left"></span> Volver
                    </a>
                </div>
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public int SugerenciaId { get; set; }

    private Sugerencias? Sugerencia { get; set; }
    private string ErrorMensaje { get; set; } = string.Empty;
    private bool isAdmin { get; set; } = false;
    private string? UserEmail { get; set; }

    protected override async Task OnInitializedAsync()
    {

        var authState = await AuthProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        isAdmin = user.IsInRole("Admin");
        UserEmail = user.FindFirst(ClaimTypes.Email)?.Value;

        var usuarioId = isAdmin ? string.Empty : user.FindFirst(ClaimTypes.NameIdentifier)?.Value;

        if (!isAdmin && string.IsNullOrEmpty(usuarioId))
        {
            ErrorMensaje = "Debes iniciar sesión para ver esta sugerencia";
            return;
        }

        Sugerencia = await sugerenciaService.ObtenerSugerenciaDetallada(SugerenciaId, usuarioId ?? string.Empty);

        if (Sugerencia == null)
        {
            ErrorMensaje = "No se encontró la sugerencia o no tienes permiso para verla";
        }

    }
}