@page "/Account/Manage/ResetAuthenticator"

@using Microsoft.AspNetCore.Identity
@using QuickRoute.Data

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject ILogger<ResetAuthenticator> Logger

<PageTitle>Restablecer clave del autenticador</PageTitle>

<StatusMessage />
<h3>Restablecer clave del autenticador</h3>
<div class="alert alert-warning" role="alert">
    <p>
        <span class="glyphicon glyphicon-warning-sign"></span>
        <strong>Si restableces tu clave de autenticación, tu aplicación de autenticación no funcionará hasta que la reconfigures.</strong>
    </p>
    <p>
        Este proceso desactiva la autenticación en dos pasos hasta que verifiques tu aplicación de autenticación.
        Si no completas la configuración de tu aplicación de autenticación, podrías perder el acceso a tu cuenta.
    </p>
</div>
<div>
    <form @formname="reset-authenticator" @onsubmit="OnSubmitAsync" method="post">
        <AntiforgeryToken />
        <button class="btn btn-danger" type="submit">Restablecer clave del autenticador</button>
    </form>
</div>

@code {
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    private async Task OnSubmitAsync()
    {
        var user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        await UserManager.SetTwoFactorEnabledAsync(user, false);
        await UserManager.ResetAuthenticatorKeyAsync(user);
        var userId = await UserManager.GetUserIdAsync(user);
        Logger.LogInformation("El usuario con ID '{UserId}' ha restablecido la clave de su aplicación de autenticación.", userId);

        await SignInManager.RefreshSignInAsync(user);

        RedirectManager.RedirectToWithStatus(
            "Account/Manage/EnableAuthenticator",
            "La clave de tu aplicación de autenticación ha sido restablecida, deberás configurar tu aplicación de autenticación con la nueva clave.",
            HttpContext);
    }
}